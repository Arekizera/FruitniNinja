import pygame
import random
import os
import math
pygame.init()
game_folder=os.path.dirname(__file__)
image_folder=os.path.join(game_folder,"Images")
fruit_folder=os.path.join(image_folder,"Fruits")
ui_folder=os.path.join(image_folder,"UI")
explosion_folder=os.path.join(image_folder,"exp")
background_folder=os.path.join(image_folder,"Backround")
music_folder=os.path.join(game_folder,"Music")
length = 1300 #1500
hight = 700 #900
size = (length,hight)
screen = pygame.display.set_mode(size,pygame.FULLSCREEN)
pygame.display.set_caption("Fruit Ninja")
cut_sound = pygame.mixer.Sound(os.path.join(music_folder,"cut.wav"))
bomb_sound = pygame.mixer.Sound(os.path.join(music_folder,"bomb.wav"))
start_sound = pygame.mixer.Sound(os.path.join(music_folder,"start.wav"))
end_sound = pygame.mixer.Sound(os.path.join(music_folder,"end.wav"))
carryOn = True
time = 0
clock = pygame.time.Clock()
#pygame.font.init()
font = pygame.font.Font(None, 50)




pygame.mixer.Sound.play(end_sound)
background = pygame.image.load(os.path.join(background_folder,"startscreen.jpg")).convert()
screen.fill([0,0,0])
screen.blit(background, [0,0])
pygame.display.flip()

#______________________Player_______________________________
class Player(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.Surface((0,0))
        self.image.fill([211,211,211])
        self.rect = self.image.get_rect()
        self.rect.x = 0
        self.rect.y = 0
    def update(self):
#--------------Restrict Movment around edges-----------------
        pos=pygame.mouse.get_pos()
        mouse=pygame.mouse.get_pressed()
        self.rect.x=pos[0]
        self.rect.y=pos[1]
        if mouse[0] == 1:
            pygame.mouse.set_cursor(*pygame.cursors.diamond)
        else:
            pygame.mouse.set_cursor(*pygame.cursors.arrow)
        
class Apple(pygame.sprite.Sprite):
    def__init__(self,start):
        pygame.sprite.Sprite.__init__(self)
        self.image=pygame.image.load(os.path.join(fruit_folder,"greenapple.png")).convert_alpha()
        self.rect=self.image.get_rect()
        self.rect.x=random.randint(0,length-150)
        self.rect.y=random.randint(hight,hight+4000)
        self.time=time
        self.const=1
        self.error=0
        self.p=0
        self.kp=0.2
        self.hight=0
        gvars.fruit_count+=1
        self.start=start
        self.angle=0
    def update(self):
        pos=pygame.mouse.get_pos()
        mouse=pygame.mouse.get_pressed()
        if time ==self.start:
            self.time=time+50
            self.const=1
            self.hight=110
        elif time<self.start:
            self.time=time
        if self.time>time:
            self.error=self.hight-self.rect.y
            self.p = self.error*self.kp
            self.rect.y+=init(self.p)
        elif self.time+5<time and self.rect.y<hight:
            self.const+=0.4
            self.rect.y+=int(2*self.const)
        
        if self.rect.y>hight+200:
            gvars.fruit_count-=1
            self.kill()
        if mouse[0]==1 and self.rect.collidepoint(pos[0],pos[1]):
            pygame.mouse.set_cursor(*pygame.cursors.diamond)
            gvars.fruit_count-=1
            self.kill()
            self.Sliced()
            gvars.score+=1
        else:
            pygame.mouse.set_cursor(*pygame.cursors.arrow)


    def Sliced(self):
        pygame.mixer.Sound.play(apple_sound)
        applecut1=AppleCut1(self.rect.x,self.rect.y,self.const)
        all_sprites.add(applecut1)
        applecut2=AppleCut2(self.rect.x,self.rect.y,self.const)
        all_sprites.add(applecut2)

class AppleCut1 (pygame.sprite.Sprite):
    def __init__(self,x,y,velocity):
        pygame. sprite. Sprite. __init__(self)
        self.image=pygame.image.load(os.path.join(fruit_folder,"greenapplecut1.png")).convert_alpha()
        self.rect=self.image.get_rect ()
        self.rect.x=x-80
        self.rect.y=y
        self.const=velocity
    def update (self):
        self.const+=0.4
        self.rect.y+=int(2*self.const)
        if self.rect.y>hight+200:
            self.kill()
class AppleCut2 (pygame.sprite.Sprite):
    def __init__(self,x,y,velocity):
        pygame.sprite.Sprite.__init__(self)
        self.image=pygame.image.load(os.path.join(fruit_folder,"greenapplecut2.png")).convert_alpha()
        self.rect=self.image.get_rect ()
        self.rect.x=x+80
        self.rect.y=y
        self.const=velocity
    def update(self):
        self.const+=0.4
        self.rect.y+=int(2*self.const)
        if self.rect.y>hight+200:
            self.kill()


class Banna(pygame.sprite. Sprite):
    def __init__(self,start):
        pygame.sprite.Sprite.__init__(self)
        self.image=pygame.image.load (os.path.join(fruit_folder, "banna.png")).convert_alpha()
        self.rect=self.image.get_rect()
        self.rect.x=random.randint(0,length-150)
        self.rect.y=random.randint(hight,hight+4000)
        self.time=time
        self.const=1
        self.error=0
        self.p=0
        self.kp=0.2
        self.hight=0
        gvars.fruit_count+=1
        self.start=start
    def update(self):
        pos=pygame.mouse.get_pos()
        mouse=pygame.mouse.get_pressed()
        if time==self.start:
            self.time=time+50
            self.const=1
            self.hight=110
        elif time<self.start:
            self.time=time
        if self.time>time:
            self.error=self.hight-self.rect.y
            self.p=self.error*self.kp
            self.rect.y+=int(self.p)
        elif self.time+5<time and self.rect.y<hight:
            self.const+=0.4
            self.rect.y+=int(2*self.const)
